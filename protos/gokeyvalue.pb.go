// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.2
// source: gokeyvalue.proto

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gokeyvalue_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_gokeyvalue_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_gokeyvalue_proto_rawDescGZIP(), []int{0}
}

func (x *Item) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Item) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ItemValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ItemValue) Reset() {
	*x = ItemValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gokeyvalue_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemValue) ProtoMessage() {}

func (x *ItemValue) ProtoReflect() protoreflect.Message {
	mi := &file_gokeyvalue_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemValue.ProtoReflect.Descriptor instead.
func (*ItemValue) Descriptor() ([]byte, []int) {
	return file_gokeyvalue_proto_rawDescGZIP(), []int{1}
}

func (x *ItemValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type NotifyEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value       string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	MasterId    uint64   `protobuf:"varint,3,opt,name=masterId,proto3" json:"masterId,omitempty"`
	VectorClock []uint64 `protobuf:"varint,4,rep,packed,name=vectorClock,proto3" json:"vectorClock,omitempty"`
}

func (x *NotifyEvent) Reset() {
	*x = NotifyEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gokeyvalue_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyEvent) ProtoMessage() {}

func (x *NotifyEvent) ProtoReflect() protoreflect.Message {
	mi := &file_gokeyvalue_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyEvent.ProtoReflect.Descriptor instead.
func (*NotifyEvent) Descriptor() ([]byte, []int) {
	return file_gokeyvalue_proto_rawDescGZIP(), []int{2}
}

func (x *NotifyEvent) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *NotifyEvent) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *NotifyEvent) GetMasterId() uint64 {
	if x != nil {
		return x.MasterId
	}
	return 0
}

func (x *NotifyEvent) GetVectorClock() []uint64 {
	if x != nil {
		return x.VectorClock
	}
	return nil
}

type GetKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetKey) Reset() {
	*x = GetKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gokeyvalue_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKey) ProtoMessage() {}

func (x *GetKey) ProtoReflect() protoreflect.Message {
	mi := &file_gokeyvalue_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKey.ProtoReflect.Descriptor instead.
func (*GetKey) Descriptor() ([]byte, []int) {
	return file_gokeyvalue_proto_rawDescGZIP(), []int{3}
}

func (x *GetKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *Success) Reset() {
	*x = Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gokeyvalue_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Success) ProtoMessage() {}

func (x *Success) ProtoReflect() protoreflect.Message {
	mi := &file_gokeyvalue_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Success.ProtoReflect.Descriptor instead.
func (*Success) Descriptor() ([]byte, []int) {
	return file_gokeyvalue_proto_rawDescGZIP(), []int{4}
}

func (x *Success) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_gokeyvalue_proto protoreflect.FileDescriptor

var file_gokeyvalue_proto_rawDesc = []byte{
	0x0a, 0x10, 0x67, 0x6f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x67, 0x6f, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e,
	0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x21,
	0x0a, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x73, 0x0a, 0x0b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x1a, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x22, 0x23, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xdf, 0x01, 0x0a, 0x0f, 0x4b, 0x65, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x17, 0x2e, 0x67, 0x6f, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x13,
	0x2e, 0x67, 0x6f, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x12, 0x2e, 0x67, 0x6f, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x1a, 0x15,
	0x2e, 0x67, 0x6f, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2c, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x10, 0x2e, 0x67,
	0x6f, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x13,
	0x2e, 0x67, 0x6f, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x12, 0x2e, 0x67, 0x6f, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x4b, 0x65, 0x79, 0x1a, 0x13, 0x2e, 0x67, 0x6f, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x3b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gokeyvalue_proto_rawDescOnce sync.Once
	file_gokeyvalue_proto_rawDescData = file_gokeyvalue_proto_rawDesc
)

func file_gokeyvalue_proto_rawDescGZIP() []byte {
	file_gokeyvalue_proto_rawDescOnce.Do(func() {
		file_gokeyvalue_proto_rawDescData = protoimpl.X.CompressGZIP(file_gokeyvalue_proto_rawDescData)
	})
	return file_gokeyvalue_proto_rawDescData
}

var file_gokeyvalue_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_gokeyvalue_proto_goTypes = []interface{}{
	(*Item)(nil),        // 0: goKeyValue.Item
	(*ItemValue)(nil),   // 1: goKeyValue.ItemValue
	(*NotifyEvent)(nil), // 2: goKeyValue.NotifyEvent
	(*GetKey)(nil),      // 3: goKeyValue.GetKey
	(*Success)(nil),     // 4: goKeyValue.Success
}
var file_gokeyvalue_proto_depIdxs = []int32{
	2, // 0: goKeyValue.KeyValueService.Notify:input_type -> goKeyValue.NotifyEvent
	3, // 1: goKeyValue.KeyValueService.Get:input_type -> goKeyValue.GetKey
	0, // 2: goKeyValue.KeyValueService.Set:input_type -> goKeyValue.Item
	3, // 3: goKeyValue.KeyValueService.DeleteKey:input_type -> goKeyValue.GetKey
	4, // 4: goKeyValue.KeyValueService.Notify:output_type -> goKeyValue.Success
	1, // 5: goKeyValue.KeyValueService.Get:output_type -> goKeyValue.ItemValue
	4, // 6: goKeyValue.KeyValueService.Set:output_type -> goKeyValue.Success
	4, // 7: goKeyValue.KeyValueService.DeleteKey:output_type -> goKeyValue.Success
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gokeyvalue_proto_init() }
func file_gokeyvalue_proto_init() {
	if File_gokeyvalue_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gokeyvalue_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gokeyvalue_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gokeyvalue_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gokeyvalue_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gokeyvalue_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gokeyvalue_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gokeyvalue_proto_goTypes,
		DependencyIndexes: file_gokeyvalue_proto_depIdxs,
		MessageInfos:      file_gokeyvalue_proto_msgTypes,
	}.Build()
	File_gokeyvalue_proto = out.File
	file_gokeyvalue_proto_rawDesc = nil
	file_gokeyvalue_proto_goTypes = nil
	file_gokeyvalue_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// KeyValueServiceClient is the client API for KeyValueService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KeyValueServiceClient interface {
	Notify(ctx context.Context, in *NotifyEvent, opts ...grpc.CallOption) (*Success, error)
	Get(ctx context.Context, in *GetKey, opts ...grpc.CallOption) (*ItemValue, error)
	Set(ctx context.Context, in *Item, opts ...grpc.CallOption) (*Success, error)
	DeleteKey(ctx context.Context, in *GetKey, opts ...grpc.CallOption) (*Success, error)
}

type keyValueServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewKeyValueServiceClient(cc grpc.ClientConnInterface) KeyValueServiceClient {
	return &keyValueServiceClient{cc}
}

func (c *keyValueServiceClient) Notify(ctx context.Context, in *NotifyEvent, opts ...grpc.CallOption) (*Success, error) {
	out := new(Success)
	err := c.cc.Invoke(ctx, "/goKeyValue.KeyValueService/Notify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keyValueServiceClient) Get(ctx context.Context, in *GetKey, opts ...grpc.CallOption) (*ItemValue, error) {
	out := new(ItemValue)
	err := c.cc.Invoke(ctx, "/goKeyValue.KeyValueService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keyValueServiceClient) Set(ctx context.Context, in *Item, opts ...grpc.CallOption) (*Success, error) {
	out := new(Success)
	err := c.cc.Invoke(ctx, "/goKeyValue.KeyValueService/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keyValueServiceClient) DeleteKey(ctx context.Context, in *GetKey, opts ...grpc.CallOption) (*Success, error) {
	out := new(Success)
	err := c.cc.Invoke(ctx, "/goKeyValue.KeyValueService/DeleteKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KeyValueServiceServer is the server API for KeyValueService service.
type KeyValueServiceServer interface {
	Notify(context.Context, *NotifyEvent) (*Success, error)
	Get(context.Context, *GetKey) (*ItemValue, error)
	Set(context.Context, *Item) (*Success, error)
	DeleteKey(context.Context, *GetKey) (*Success, error)
}

// UnimplementedKeyValueServiceServer can be embedded to have forward compatible implementations.
type UnimplementedKeyValueServiceServer struct {
}

func (*UnimplementedKeyValueServiceServer) Notify(context.Context, *NotifyEvent) (*Success, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Notify not implemented")
}
func (*UnimplementedKeyValueServiceServer) Get(context.Context, *GetKey) (*ItemValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedKeyValueServiceServer) Set(context.Context, *Item) (*Success, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Set not implemented")
}
func (*UnimplementedKeyValueServiceServer) DeleteKey(context.Context, *GetKey) (*Success, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteKey not implemented")
}

func RegisterKeyValueServiceServer(s *grpc.Server, srv KeyValueServiceServer) {
	s.RegisterService(&_KeyValueService_serviceDesc, srv)
}

func _KeyValueService_Notify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotifyEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyValueServiceServer).Notify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goKeyValue.KeyValueService/Notify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyValueServiceServer).Notify(ctx, req.(*NotifyEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeyValueService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyValueServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goKeyValue.KeyValueService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyValueServiceServer).Get(ctx, req.(*GetKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeyValueService_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Item)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyValueServiceServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goKeyValue.KeyValueService/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyValueServiceServer).Set(ctx, req.(*Item))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeyValueService_DeleteKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyValueServiceServer).DeleteKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goKeyValue.KeyValueService/DeleteKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyValueServiceServer).DeleteKey(ctx, req.(*GetKey))
	}
	return interceptor(ctx, in, info, handler)
}

var _KeyValueService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "goKeyValue.KeyValueService",
	HandlerType: (*KeyValueServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Notify",
			Handler:    _KeyValueService_Notify_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _KeyValueService_Get_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _KeyValueService_Set_Handler,
		},
		{
			MethodName: "DeleteKey",
			Handler:    _KeyValueService_DeleteKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gokeyvalue.proto",
}
